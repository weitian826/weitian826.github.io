---
layout:     post
title:      "Longest Palindromic Substring"
subtitle:   ""
date:       2017-09-16 01:24:50
author:     "wlq"
header-img: "img/post_bg_gravitational_wave.jpg"
tags:
    - leetcode
    - string algorithms
---

> Longest Palindromic Substring

##problem
Given a string s, find the longest palindromic substring in s. You may assume that the maximum length of s is 1000.
Example:
Input: "babad"
Output: "bab"
Note: "aba" is also a valid answer.

Example:
Input: "cbbd"
Output: "bb"

##part1- my answer (python)
  
  class Solution(object):
    def isPalindrome(self, s):
        len_s = len(s)
        
        for i in range(len_s):
            if i >= len_s / 2:
                break
            if s[i] != s[len_s - i - 1]:
                return False
        
        return True
        
        
    def longestPalindrome(self, s):
        """
        :type s: str
        :rtype: str
        """
        output_str = ''
        cur_str = ''
        len_s = len(s)
        for i in range(int(len_s), 0, -1):
            for j in range(len_s):
                #print str(i),str(j),output_str
                if j + i <= len_s:
                    if self.isPalindrome(s[j: j + i]):
                        output_str = s[j: j + i]
                        return output_str
                else:
                    break
            
        return output_str
            
